DROP TABLE IF EXISTS participation_requests;
DROP TABLE IF EXISTS event_short;
DROP TABLE IF EXISTS new_event;
DROP TABLE IF EXISTS event_full;
DROP TABLE IF EXISTS compilations_events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS user_short;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS categories;

CREATE TABLE IF NOT EXISTS categories
(
    category_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(64) NOT NULL,
    CONSTRAINT uq_name UNIQUE (category_name)
    );

CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email VARCHAR(256) NOT NULL,
    user_name  VARCHAR(256) NOT NULL,
    CONSTRAINT uq_email UNIQUE (user_email)
    );

CREATE TABLE IF NOT EXISTS user_short(
   id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name     BIGINT  NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    location_lat REAL NOT NULL,
    location_lon REAL NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    event_id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_annotation         VARCHAR(2048)               NOT NULL,
    event_category_id        BIGINT                      NOT NULL,
    event_confirmed_requests BIGINT,
    event_created_on         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_description        VARCHAR(8192)               NOT NULL,
    event_event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_initiator_id       BIGINT                      NOT NULL,
    event_location_id        BIGINT                      NOT NULL,
    event_paid               BOOLEAN DEFAULT FALSE       NOT NULL,
    event_participant_limit  INTEGER DEFAULT 0           NOT NULL,
    event_published_on       TIMESTAMP WITHOUT TIME ZONE,
    event_request_moderation BOOLEAN DEFAULT FALSE,
    event_state              VARCHAR(16)                 NOT NULL,
    event_title              VARCHAR(128)                NOT NULL,
    CONSTRAINT fk_event_to_categories FOREIGN KEY (event_category_id)
    REFERENCES categories (category_id),
    CONSTRAINT fk_event_to_users FOREIGN KEY (event_initiator_id)
    REFERENCES users (user_id) ON UPDATE RESTRICT ON DELETE CASCADE,
    CONSTRAINT fk_event_to_locations FOREIGN KEY (event_location_id)
    REFERENCES locations (location_id) ON UPDATE RESTRICT ON DELETE CASCADE
    );
CREATE TABLE IF NOT EXISTS compilations
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned       BOOLEAN      NOT NULL,
    title        VARCHAR(100)
);


CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (event_id)
    );

CREATE TABLE IF NOT EXISTS event_full(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id BIGINT NOT NULL,
    enum_state  varchar NOT NULL,
    confirmed_requests BIGINT NOT NULL,
    annotation  varchar NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description varchar NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT NOT NULL,
    location_id BIGINT NOT NULL,
    paid BOOLEAN      NOT NULL,
    participant_limit BIGINT DEFAULT 0,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN      NOT NULL DEFAULT true,
    title varchar NOT NULL,
    views BIGINT NOT NULL,

    FOREIGN KEY (location_id) REFERENCES locations (location_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES categories (category_id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (user_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS new_event(
    annotation  varchar NOT NULL,
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id BIGINT NOT NULL,
    description varchar NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    location_id BIGINT NOT NULL,
    paid BOOLEAN      NOT NULL,
    participant_limit BIGINT DEFAULT 0,
    request_moderation BOOLEAN      NOT NULL DEFAULT true,
    title varchar NOT NULL,


    FOREIGN KEY (location_id) REFERENCES locations (location_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES categories (category_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS event_short(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id BIGINT NOT NULL,
    confirmed_requests BIGINT NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT NOT NULL,
    paid BOOLEAN      NOT NULL,
    title varchar NOT NULL,
    views BIGINT NOT NULL,

    FOREIGN KEY (category_id) REFERENCES categories (category_id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (user_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS participation_requests
(
    participation_request_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    participation_request_created      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    participation_request_event_id     BIGINT                      NOT NULL,
    participation_request_requester_id BIGINT                      NOT NULL,
    participation_request_status       VARCHAR(16)                 NOT NULL,
    CONSTRAINT fk_participation_request_requester FOREIGN KEY (participation_request_requester_id)
    REFERENCES users (user_id),
    CONSTRAINT fk_participation_request_event FOREIGN KEY (participation_request_event_id)
    REFERENCES events (event_id),
    CONSTRAINT uq_unique_requester_event UNIQUE (participation_request_requester_id, participation_request_event_id)
);
